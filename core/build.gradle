apply plugin: "java-library"
apply plugin: 'com.adarshr.test-logger'
apply plugin: 'jacoco'

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

eclipse.project.name = appName + "-core"

dependencies {
    api "com.badlogicgames.gdx:gdx:$gdxVersion"
    implementation "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxControllersVersion"

    testImplementation "org.assertj:assertj-core:3.6.1"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.10.1"
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.1"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"

    testImplementation "org.mockito:mockito-junit-jupiter:5.8.0"
    testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
    testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
    testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
}

sourceSets {
    main {
        java.srcDir("src/main/java")
    }
    test {
        java.srcDir("src/test/java")
    }
}

test {
    useJUnitPlatform()
    workingDir = new File("../assets")

    jacoco {
        enabled = true
    }
}


jacocoTestReport {
    reports {
        csv.required = false
        xml.required = true
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

    dependsOn(test)
}

sonar {
    properties {
        property "sonar.sources", "src/main/java"
        property "sonar.coverage.jacoco.xmlReportPaths", "$projectDir.path/build/reports/jacoco/test/jacocoTestReport.xml"
    }
}

